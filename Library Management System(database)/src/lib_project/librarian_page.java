/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lib_project;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class librarian_page extends javax.swing.JFrame {

    /**
     * Creates new form librarian_page
     */
    public librarian_page() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        librarian_nav_panel = new javax.swing.JPanel();
        Librarian = new javax.swing.JLabel();
        btn_student_reg = new javax.swing.JButton();
        btn_view_student = new javax.swing.JButton();
        btn_add_books = new javax.swing.JButton();
        btn_view_books = new javax.swing.JButton();
        btn_issue_books = new javax.swing.JButton();
        view_issue_books_btn = new javax.swing.JButton();
        search_btn = new javax.swing.JButton();
        btn_other_quries = new javax.swing.JButton();
        btn_logout_librarian = new javax.swing.JButton();
        btn_return_books = new javax.swing.JButton();
        lib_show_panel = new javax.swing.JPanel();
        welcome_panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        student_reg_panel = new javax.swing.JPanel();
        student_name_field = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        student_roll_field = new javax.swing.JTextField();
        roll = new javax.swing.JLabel();
        sex = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        grp_CB = new javax.swing.JComboBox<>();
        grp = new javax.swing.JLabel();
        yr1 = new javax.swing.JRadioButton();
        yr2 = new javax.swing.JRadioButton();
        year = new javax.swing.JLabel();
        student_con_field = new javax.swing.JTextField();
        contact = new javax.swing.JLabel();
        save_student_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        view_student_panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        student_table = new javax.swing.JTable();
        add_book_panel = new javax.swing.JPanel();
        book_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        book_auth = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        book_reg = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        book_pub = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        book_cat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        book_quan = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btn_book_added = new javax.swing.JButton();
        book_date = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        view_books_panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        books_table = new javax.swing.JTable();
        Search_panel = new javax.swing.JPanel();
        search_book = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btn_search_book = new javax.swing.JButton();
        search_student = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        btn_search_student = new javax.swing.JButton();
        search_table_subPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        search_table = new javax.swing.JTable();
        issue_books_panel = new javax.swing.JPanel();
        issue_book_reg = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        issue_student_roll = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        issue_book_date = new com.toedter.calendar.JDateChooser();
        btn_book_issued = new javax.swing.JButton();
        view_issue_books_panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        issue_table = new javax.swing.JTable();
        return_book_panel = new javax.swing.JPanel();
        return_book_reg = new javax.swing.JTextField();
        return_student_roll = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btn_book_returned = new javax.swing.JButton();
        other_queries_panel = new javax.swing.JPanel();
        query_table_subPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        query_table = new javax.swing.JTable();
        borrow_author_btn = new javax.swing.JButton();
        borrow_amount_btn = new javax.swing.JButton();
        issue_amount_btn = new javax.swing.JButton();
        remaining_amnt_btn = new javax.swing.JButton();
        book_borrower = new javax.swing.JButton();
        borrower_1st = new javax.swing.JButton();
        borrower_2nd = new javax.swing.JButton();
        borrowed_catagory = new javax.swing.JButton();
        total_1st = new javax.swing.JButton();
        total_2nd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        librarian_nav_panel.setBackground(new java.awt.Color(102, 255, 51));

        Librarian.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Librarian.setText("Librarian Panel");

        btn_student_reg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_student_reg.setText("Student Registration");
        btn_student_reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_student_regActionPerformed(evt);
            }
        });

        btn_view_student.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_view_student.setText("View Student");
        btn_view_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_view_studentActionPerformed(evt);
            }
        });

        btn_add_books.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_add_books.setText("Add Books");
        btn_add_books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_booksActionPerformed(evt);
            }
        });

        btn_view_books.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_view_books.setText("View Books");
        btn_view_books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_view_booksActionPerformed(evt);
            }
        });

        btn_issue_books.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_issue_books.setText("Issue Books");
        btn_issue_books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_issue_booksActionPerformed(evt);
            }
        });

        view_issue_books_btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_issue_books_btn.setText("View Issued Books");
        view_issue_books_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_issue_books_btnActionPerformed(evt);
            }
        });

        search_btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search_btn.setText("Search");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        btn_other_quries.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_other_quries.setText("Other Queries");
        btn_other_quries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_other_quriesActionPerformed(evt);
            }
        });

        btn_logout_librarian.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_logout_librarian.setText("Logout");
        btn_logout_librarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logout_librarianActionPerformed(evt);
            }
        });

        btn_return_books.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_return_books.setText("Return Books");
        btn_return_books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_return_booksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout librarian_nav_panelLayout = new javax.swing.GroupLayout(librarian_nav_panel);
        librarian_nav_panel.setLayout(librarian_nav_panelLayout);
        librarian_nav_panelLayout.setHorizontalGroup(
            librarian_nav_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, librarian_nav_panelLayout.createSequentialGroup()
                .addGroup(librarian_nav_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_student_reg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, librarian_nav_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(search_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_view_student, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_add_books, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_view_books, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_issue_books, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(view_issue_books_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_other_quries, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_logout_librarian, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_return_books, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, librarian_nav_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Librarian)
                .addGap(81, 81, 81))
        );
        librarian_nav_panelLayout.setVerticalGroup(
            librarian_nav_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(librarian_nav_panelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Librarian, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_student_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_view_student, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_add_books, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_view_books, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_issue_books, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(view_issue_books_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_return_books, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_other_quries, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_logout_librarian, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        lib_show_panel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Welcome to Librarian Panel !");

        javax.swing.GroupLayout welcome_panelLayout = new javax.swing.GroupLayout(welcome_panel);
        welcome_panel.setLayout(welcome_panelLayout);
        welcome_panelLayout.setHorizontalGroup(
            welcome_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcome_panelLayout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jLabel1)
                .addContainerGap(748, Short.MAX_VALUE))
        );
        welcome_panelLayout.setVerticalGroup(
            welcome_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcome_panelLayout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        lib_show_panel.add(welcome_panel, "card2");

        student_name_field.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        student_name_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                student_name_fieldKeyTyped(evt);
            }
        });

        name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        name.setText("Name");

        student_roll_field.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        student_roll_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                student_roll_fieldKeyTyped(evt);
            }
        });

        roll.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        roll.setText("Roll No");

        sex.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sex.setText("Sex");

        male.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        female.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        grp_CB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        grp_CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Science", "Arts", "Commerce" }));
        grp_CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grp_CBActionPerformed(evt);
            }
        });

        grp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        grp.setText("Group");

        yr1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yr1.setText("1st");
        yr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yr1ActionPerformed(evt);
            }
        });

        yr2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yr2.setText("2nd");
        yr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yr2ActionPerformed(evt);
            }
        });

        year.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        year.setText("Year");

        student_con_field.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        contact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        contact.setText("Contact");

        save_student_btn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        save_student_btn.setText("Save");
        save_student_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_student_btnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("(Only numbers are allowed)");

        javax.swing.GroupLayout student_reg_panelLayout = new javax.swing.GroupLayout(student_reg_panel);
        student_reg_panel.setLayout(student_reg_panelLayout);
        student_reg_panelLayout.setHorizontalGroup(
            student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(student_reg_panelLayout.createSequentialGroup()
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(student_reg_panelLayout.createSequentialGroup()
                            .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, student_reg_panelLayout.createSequentialGroup()
                                    .addGap(320, 320, 320)
                                    .addComponent(sex, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(student_reg_panelLayout.createSequentialGroup()
                                    .addGap(222, 222, 222)
                                    .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(student_reg_panelLayout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(18, 18, 18))
                                        .addGroup(student_reg_panelLayout.createSequentialGroup()
                                            .addComponent(name)
                                            .addGap(50, 50, 50))
                                        .addGroup(student_reg_panelLayout.createSequentialGroup()
                                            .addComponent(roll)
                                            .addGap(67, 67, 67)))))
                            .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(student_reg_panelLayout.createSequentialGroup()
                                    .addComponent(male)
                                    .addGap(45, 45, 45)
                                    .addComponent(female))
                                .addComponent(student_name_field, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                .addComponent(student_roll_field)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, student_reg_panelLayout.createSequentialGroup()
                            .addGap(320, 320, 320)
                            .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(year)
                                .addGroup(student_reg_panelLayout.createSequentialGroup()
                                    .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(grp)
                                        .addComponent(contact))
                                    .addGap(11, 40, Short.MAX_VALUE)
                                    .addComponent(student_con_field, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, student_reg_panelLayout.createSequentialGroup()
                            .addGap(430, 430, 430)
                            .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(grp_CB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(student_reg_panelLayout.createSequentialGroup()
                                    .addComponent(yr1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yr2)
                                    .addGap(59, 59, 59)))))
                    .addGroup(student_reg_panelLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(save_student_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(718, Short.MAX_VALUE))
        );
        student_reg_panelLayout.setVerticalGroup(
            student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(student_reg_panelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(student_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(student_reg_panelLayout.createSequentialGroup()
                        .addComponent(roll)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(student_roll_field, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(male)
                    .addComponent(female)
                    .addComponent(sex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grp_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yr1)
                        .addComponent(year))
                    .addComponent(yr2))
                .addGap(18, 18, 18)
                .addGroup(student_reg_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(student_con_field, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact))
                .addGap(95, 95, 95)
                .addComponent(save_student_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        lib_show_panel.add(student_reg_panel, "card2");

        student_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        student_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Roll No", "Name", "Sex", "Group", "Year", "Contact"
            }
        ));
        jScrollPane1.setViewportView(student_table);

        javax.swing.GroupLayout view_student_panelLayout = new javax.swing.GroupLayout(view_student_panel);
        view_student_panel.setLayout(view_student_panelLayout);
        view_student_panelLayout.setHorizontalGroup(
            view_student_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1353, Short.MAX_VALUE)
        );
        view_student_panelLayout.setVerticalGroup(
            view_student_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );

        lib_show_panel.add(view_student_panel, "card2");

        book_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Book Name");

        book_auth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Book Author");

        book_reg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Registration ID");

        book_pub.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Book Publisher");

        book_cat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        book_cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Educational", "Fictional", "Magazine" }));
        book_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_catActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Catagory");

        book_quan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        book_quan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                book_quanKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Total Quantity");

        btn_book_added.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_book_added.setText("Add");
        btn_book_added.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_book_addedActionPerformed(evt);
            }
        });

        book_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Adding Date");

        javax.swing.GroupLayout add_book_panelLayout = new javax.swing.GroupLayout(add_book_panel);
        add_book_panel.setLayout(add_book_panelLayout);
        add_book_panelLayout.setHorizontalGroup(
            add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_book_panelLayout.createSequentialGroup()
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(add_book_panelLayout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(add_book_panelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(book_name, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(add_book_panelLayout.createSequentialGroup()
                                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(26, 26, 26)
                                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(book_auth)
                                    .addComponent(book_reg)
                                    .addComponent(book_pub)
                                    .addComponent(book_cat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(book_quan)
                                    .addComponent(book_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(add_book_panelLayout.createSequentialGroup()
                        .addGap(459, 459, 459)
                        .addComponent(btn_book_added, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(608, Short.MAX_VALUE))
        );
        add_book_panelLayout.setVerticalGroup(
            add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_book_panelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_name, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_auth, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_pub, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_cat, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(book_date, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(btn_book_added, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        lib_show_panel.add(add_book_panel, "card2");

        books_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        books_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reg_no", "B_name ", "B_author", "B_publisher", "Catagory", "Total_quantity", "Adding_Date"
            }
        ));
        jScrollPane2.setViewportView(books_table);

        javax.swing.GroupLayout view_books_panelLayout = new javax.swing.GroupLayout(view_books_panel);
        view_books_panel.setLayout(view_books_panelLayout);
        view_books_panelLayout.setHorizontalGroup(
            view_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1353, Short.MAX_VALUE)
        );
        view_books_panelLayout.setVerticalGroup(
            view_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );

        lib_show_panel.add(view_books_panel, "card2");

        search_book.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search_book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_bookMouseClicked(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Enter Book Name");

        btn_search_book.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_search_book.setText("Search Book");
        btn_search_book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_bookActionPerformed(evt);
            }
        });

        search_student.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search_student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_studentMouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Enter Student Name");

        btn_search_student.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_search_student.setText("Search Student");
        btn_search_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_studentActionPerformed(evt);
            }
        });

        search_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(search_table);

        javax.swing.GroupLayout search_table_subPanelLayout = new javax.swing.GroupLayout(search_table_subPanel);
        search_table_subPanel.setLayout(search_table_subPanelLayout);
        search_table_subPanelLayout.setHorizontalGroup(
            search_table_subPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(search_table_subPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        search_table_subPanelLayout.setVerticalGroup(
            search_table_subPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Search_panelLayout = new javax.swing.GroupLayout(Search_panel);
        Search_panel.setLayout(Search_panelLayout);
        Search_panelLayout.setHorizontalGroup(
            Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(search_table_subPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Search_panelLayout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addGroup(Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(26, 26, 26)
                .addGroup(Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(search_book)
                    .addComponent(search_student, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_search_book, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_search_student))
                .addContainerGap(437, Short.MAX_VALUE))
        );
        Search_panelLayout.setVerticalGroup(
            Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Search_panelLayout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addGroup(Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_book, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(btn_search_book, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_search_student, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Search_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search_student, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)))
                .addGap(94, 94, 94)
                .addComponent(search_table_subPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lib_show_panel.add(Search_panel, "card2");

        issue_book_reg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        issue_book_reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue_book_regActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Book Registration No");

        issue_student_roll.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        issue_student_roll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                issue_student_rollKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Student Roll");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Issue Date");

        issue_book_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btn_book_issued.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_book_issued.setText("Issue");
        btn_book_issued.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_book_issuedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout issue_books_panelLayout = new javax.swing.GroupLayout(issue_books_panel);
        issue_books_panel.setLayout(issue_books_panelLayout);
        issue_books_panelLayout.setHorizontalGroup(
            issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(issue_books_panelLayout.createSequentialGroup()
                .addGroup(issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(issue_books_panelLayout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addGroup(issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(34, 34, 34)
                        .addGroup(issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(issue_student_roll)
                            .addComponent(issue_book_reg)
                            .addComponent(issue_book_date, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)))
                    .addGroup(issue_books_panelLayout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(btn_book_issued, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(738, Short.MAX_VALUE))
        );
        issue_books_panelLayout.setVerticalGroup(
            issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(issue_books_panelLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(issue_book_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(issue_student_roll, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(issue_book_date, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(issue_books_panelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel12)))
                .addGap(90, 90, 90)
                .addComponent(btn_book_issued, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        lib_show_panel.add(issue_books_panel, "card2");

        issue_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        issue_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "I_id", "S_roll", "Reg_no", "Issue_Date"
            }
        ));
        jScrollPane3.setViewportView(issue_table);

        javax.swing.GroupLayout view_issue_books_panelLayout = new javax.swing.GroupLayout(view_issue_books_panel);
        view_issue_books_panel.setLayout(view_issue_books_panelLayout);
        view_issue_books_panelLayout.setHorizontalGroup(
            view_issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1353, Short.MAX_VALUE)
        );
        view_issue_books_panelLayout.setVerticalGroup(
            view_issue_books_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );

        lib_show_panel.add(view_issue_books_panel, "card2");

        return_book_reg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        return_student_roll.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        return_student_roll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                return_student_rollKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Book Registration ID");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Student Roll No");

        btn_book_returned.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_book_returned.setText("Return");
        btn_book_returned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_book_returnedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout return_book_panelLayout = new javax.swing.GroupLayout(return_book_panel);
        return_book_panel.setLayout(return_book_panelLayout);
        return_book_panelLayout.setHorizontalGroup(
            return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(return_book_panelLayout.createSequentialGroup()
                .addGroup(return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(return_book_panelLayout.createSequentialGroup()
                        .addGap(469, 469, 469)
                        .addComponent(btn_book_returned, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(return_book_panelLayout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addGroup(return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99)
                        .addGroup(return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(return_student_roll)
                            .addComponent(return_book_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(589, Short.MAX_VALUE))
        );
        return_book_panelLayout.setVerticalGroup(
            return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(return_book_panelLayout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(return_book_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(return_book_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(return_student_roll, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(71, 71, 71)
                .addComponent(btn_book_returned, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        lib_show_panel.add(return_book_panel, "card2");

        query_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        query_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(query_table);

        javax.swing.GroupLayout query_table_subPanelLayout = new javax.swing.GroupLayout(query_table_subPanel);
        query_table_subPanel.setLayout(query_table_subPanelLayout);
        query_table_subPanelLayout.setHorizontalGroup(
            query_table_subPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(query_table_subPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        query_table_subPanelLayout.setVerticalGroup(
            query_table_subPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        );

        borrow_author_btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        borrow_author_btn.setText("Show Books and Authors that have been Borrowed");
        borrow_author_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrow_author_btnActionPerformed(evt);
            }
        });

        borrow_amount_btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        borrow_amount_btn.setText("Show Amount of Books being Borrowed Currently");
        borrow_amount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrow_amount_btnActionPerformed(evt);
            }
        });

        issue_amount_btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        issue_amount_btn.setText("Show the Books being Issued and in Which Amount");
        issue_amount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issue_amount_btnActionPerformed(evt);
            }
        });

        remaining_amnt_btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        remaining_amnt_btn.setText("Show Remaining Quantities of Books After Borrowing");
        remaining_amnt_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remaining_amnt_btnActionPerformed(evt);
            }
        });

        book_borrower.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        book_borrower.setText("Show Students Who Borrowed Books");
        book_borrower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_borrowerActionPerformed(evt);
            }
        });

        borrower_1st.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        borrower_1st.setText("Show 1st Year Students Who Borrowed and Which Books");
        borrower_1st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrower_1stActionPerformed(evt);
            }
        });

        borrower_2nd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        borrower_2nd.setText("Show 2nd Year Students Who Borrowed and Which Books");
        borrower_2nd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrower_2ndActionPerformed(evt);
            }
        });

        borrowed_catagory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        borrowed_catagory.setText("Show Borrowed Books of Each Catagory");
        borrowed_catagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowed_catagoryActionPerformed(evt);
            }
        });

        total_1st.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_1st.setText("Total 1st Year Borrower Students");
        total_1st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_1stActionPerformed(evt);
            }
        });

        total_2nd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total_2nd.setText("Total 2nd Year Borrower Studemnts");
        total_2nd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_2ndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout other_queries_panelLayout = new javax.swing.GroupLayout(other_queries_panel);
        other_queries_panel.setLayout(other_queries_panelLayout);
        other_queries_panelLayout.setHorizontalGroup(
            other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(query_table_subPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(other_queries_panelLayout.createSequentialGroup()
                .addGroup(other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(other_queries_panelLayout.createSequentialGroup()
                        .addComponent(book_borrower, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrow_author_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrow_amount_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(other_queries_panelLayout.createSequentialGroup()
                        .addComponent(issue_amount_btn)
                        .addGap(12, 12, 12)
                        .addComponent(remaining_amnt_btn))
                    .addGroup(other_queries_panelLayout.createSequentialGroup()
                        .addComponent(total_1st, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(total_2nd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrowed_catagory))
                    .addGroup(other_queries_panelLayout.createSequentialGroup()
                        .addComponent(borrower_1st)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrower_2nd)))
                .addGap(0, 238, Short.MAX_VALUE))
        );
        other_queries_panelLayout.setVerticalGroup(
            other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(other_queries_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(book_borrower, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(borrow_author_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(borrow_amount_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(remaining_amnt_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(issue_amount_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrowed_catagory, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total_1st, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total_2nd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(other_queries_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrower_1st, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrower_2nd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(query_table_subPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lib_show_panel.add(other_queries_panel, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(librarian_nav_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lib_show_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(librarian_nav_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lib_show_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_logout_librarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logout_librarianActionPerformed
        // TODO add your handling code here:
        new front_page().setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_btn_logout_librarianActionPerformed

    private void btn_student_regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_student_regActionPerformed
        lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(student_reg_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
    }//GEN-LAST:event_btn_student_regActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
        gander = "Male";
        if (male.isSelected()){
            female.setSelected(false);
        }
    }//GEN-LAST:event_maleActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
        gander = "Female";
        if (female.isSelected()){
            male.setSelected(false);
        }
    }//GEN-LAST:event_femaleActionPerformed

    private void yr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yr1ActionPerformed
        // TODO add your handling code here:
        stu_year ="1st";
        if(yr1.isSelected()){
            yr2.setSelected(false);
        }
    }//GEN-LAST:event_yr1ActionPerformed

    private void yr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yr2ActionPerformed
        // TODO add your handling code here:
         stu_year ="2nd";
        if(yr2.isSelected()){
            yr1.setSelected(false);
        }
    }//GEN-LAST:event_yr2ActionPerformed

    private void grp_CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_CBActionPerformed
        // TODO add your handling code here:
        group = (String)grp_CB.getSelectedItem();
    }//GEN-LAST:event_grp_CBActionPerformed

    private void save_student_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_student_btnActionPerformed
            String student_name = student_name_field.getText().trim();
            String student_roll = student_roll_field.getText().trim();
            String student_contact = student_con_field.getText().trim();
            
          
          
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
             
              Statement statement = connection.createStatement();  
              
              
if (!(student_name.isEmpty()) && !(student_roll.isEmpty()) && !(student_contact.isEmpty()) && !(gander.isEmpty()) && !(stu_year.isEmpty()) && !(group.isEmpty()) ){ 

statement.execute(" insert into student "  + " values ('"+student_roll+"', '"+student_name+"', '"+gander+"', '"+group+"', '"+stu_year+"' , '"+student_contact+"' )" );     
JOptionPane.showMessageDialog(librarian_page.this, "Information Saved!" , "Success" , JOptionPane.INFORMATION_MESSAGE);
             student_name_field.setText("");
             student_roll_field.setText("");
             student_con_field.setText("");
             male.setSelected(false);
             female.setSelected(false);
             yr1.setSelected(false);
             yr2.setSelected(false);
                            
               }
               else{
                   JOptionPane.showMessageDialog(librarian_page.this, "One or several data fields are missing!" , "Error" , JOptionPane.ERROR_MESSAGE);
               }
             
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(librarian_page.this, "Roll Already Exists!" , "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_save_student_btnActionPerformed

    private void student_name_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_student_name_fieldKeyTyped
       
    }//GEN-LAST:event_student_name_fieldKeyTyped

    private void student_roll_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_student_roll_fieldKeyTyped
         char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c== KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_student_roll_fieldKeyTyped

    private void btn_view_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_view_studentActionPerformed
        // TODO add your handling code here:
        lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(view_student_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        try {  
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT  * FROM student");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          student_table.setModel(dtm); 
             
         } catch (Exception e) {  
             e.printStackTrace();  
         }  
        
    }//GEN-LAST:event_btn_view_studentActionPerformed

    private void btn_add_booksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_booksActionPerformed
        lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(add_book_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
    }//GEN-LAST:event_btn_add_booksActionPerformed

    private void btn_book_addedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_book_addedActionPerformed
        String b_name = book_name.getText().trim();
        String b_auth = book_auth.getText().trim();
        String b_reg = book_reg.getText().trim();
        String b_pub = book_pub.getText().trim();
        String b_qua = book_quan.getText().trim();
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String b_date = sdf.format(book_date.getDate());
        
        //Date date = new Date();
       // book_date.setDate(date);
        
        try {
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true"); 
             
             Statement statement = connection.createStatement();  
            if (!(b_name.isEmpty()) && !(b_auth.isEmpty()) && !(b_reg.isEmpty()) && !(b_pub.isEmpty()) && !(b_qua.isEmpty()) && !(catagory.isEmpty())  ){ 
                
statement.execute(" insert into book "  + " values ('"+b_reg+"', '"+b_name+"', '"+b_auth+"', '"+b_pub+"', '"+catagory+"' , '"+b_qua+"' , '"+b_date+"' )" );     
JOptionPane.showMessageDialog(librarian_page.this, "Information Saved!" , "Success" , JOptionPane.INFORMATION_MESSAGE);
             book_name.setText("");
             book_auth.setText("");
             book_reg.setText("");
             book_pub.setText("");
             book_quan.setText("");
             
             book_date.setDate(null);
                           
               }
               else{
                   JOptionPane.showMessageDialog(librarian_page.this, "One or several data fields are missing!" , "Error" , JOptionPane.ERROR_MESSAGE);
               }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(librarian_page.this, "Registration ID already exists Exists!" , "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_book_addedActionPerformed

    private void book_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_catActionPerformed
        catagory = (String)book_cat.getSelectedItem();
    }//GEN-LAST:event_book_catActionPerformed

    private void book_quanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_book_quanKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c== KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_book_quanKeyTyped

    private void btn_view_booksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_view_booksActionPerformed
         lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(view_books_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT  * FROM book");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          books_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_btn_view_booksActionPerformed

    private void issue_book_regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue_book_regActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_issue_book_regActionPerformed

    private void btn_issue_booksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_issue_booksActionPerformed
        lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(issue_books_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
    }//GEN-LAST:event_btn_issue_booksActionPerformed

    private void btn_book_issuedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_book_issuedActionPerformed
        String issue_book = issue_book_reg.getText().trim();
        String issue_student = issue_student_roll.getText().trim();
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String issue_date = sdf.format(issue_book_date.getDate());
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true"); 
             
             Statement statement = connection.createStatement();  
            if (!(issue_book.isEmpty()) && !(issue_student.isEmpty()) ){ 
                
statement.execute(" insert into issue_info "  + " values ('"+issue_student+"', '"+issue_book+"', '"+issue_date+"' )" );     
JOptionPane.showMessageDialog(librarian_page.this, "Issued!" , "Success" , JOptionPane.INFORMATION_MESSAGE);
             issue_book_reg.setText("");
             issue_student_roll.setText("");
             
             
             issue_book_date.setDate(null);
                           
               }
               else{
                   JOptionPane.showMessageDialog(librarian_page.this, "One or several data fields are missing!" , "Error" , JOptionPane.ERROR_MESSAGE);
               }
            
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(librarian_page.this, "Invalid Book or Student!" , "Error" , JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btn_book_issuedActionPerformed

    private void issue_student_rollKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_issue_student_rollKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c== KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_issue_student_rollKeyTyped

    private void view_issue_books_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_issue_books_btnActionPerformed
         lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(view_issue_books_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT  S_roll as Student_roll, Reg_no as Book_Registration_ID FROM issue_info");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          issue_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_view_issue_books_btnActionPerformed

    private void btn_return_booksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_return_booksActionPerformed
        lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(return_book_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
    }//GEN-LAST:event_btn_return_booksActionPerformed

    private void btn_book_returnedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_book_returnedActionPerformed
        String return_reg = return_book_reg.getText().trim();
        String return_roll = return_student_roll.getText().trim();
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true"); 
            Statement statement = connection.createStatement(); 
            
            if ( (!return_roll.isEmpty()) && (!return_reg.isEmpty())){
            int deleted = statement.executeUpdate("delete from issue_info where S_roll= '"+return_roll+"' and Reg_no = '"+return_reg+"'");
            if (deleted==0){
                JOptionPane.showMessageDialog(librarian_page.this, "Please Enter Correct Information!" , "Sorry" , JOptionPane.ERROR_MESSAGE);
                
                return;
            }
            else {
            JOptionPane.showMessageDialog(librarian_page.this, "Returned!" , "Success" , JOptionPane.INFORMATION_MESSAGE);
            return_book_reg.setText("");
            return_student_roll.setText("");
            
            }

            }
            else{
                JOptionPane.showMessageDialog(librarian_page.this, "Please Enter Information!" , "Error" , JOptionPane.ERROR_MESSAGE);
            }
            
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(librarian_page.this, "Error!" , "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_book_returnedActionPerformed

    private void return_student_rollKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_return_student_rollKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c== KeyEvent.VK_DELETE))){
            evt.consume();
        }
    }//GEN-LAST:event_return_student_rollKeyTyped

    private void btn_other_quriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_other_quriesActionPerformed
        lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(other_queries_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
    }//GEN-LAST:event_btn_other_quriesActionPerformed

    private void borrow_author_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrow_author_btnActionPerformed
                        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT B_name as Book_name, B_author as Book_Author from book where Reg_no = any (select Reg_no from issue_info)");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_borrow_author_btnActionPerformed

    private void borrow_amount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrow_amount_btnActionPerformed
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT count(Reg_no) as Total_Borrow_Amount from issue_info");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_borrow_amount_btnActionPerformed

    private void issue_amount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issue_amount_btnActionPerformed
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT B_name as Book_Name, count(book.Reg_no) as Issued_Amount from book "
                     + "                                   join issue_info "
                     + "                                   on book.Reg_no=issue_info.Reg_no "
                     + "                                   group by B_name");
             
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_issue_amount_btnActionPerformed

    private void remaining_amnt_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remaining_amnt_btnActionPerformed
       try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT B_name as Book_Name ,(Adding_quantity - count(book.Reg_no)) as Remaining_Quantity from book"
                     + "                            join issue_info"
                     + "                            on book.Reg_no = issue_info.Reg_no"
                     + "                            group by B_name,Adding_quantity");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_remaining_amnt_btnActionPerformed

    private void book_borrowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_borrowerActionPerformed
       try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT * from student where S_roll = any (select S_roll from issue_info)");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_book_borrowerActionPerformed

    private void borrower_1stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrower_1stActionPerformed
       try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("select issue_info.S_roll as Student_roll, S_name as Student_name,S_year as Student_year,S_group as Student_group, book.B_name as Book_Borrowed from student"
                     + "                            join issue_info"
                     + "                            on student.S_roll = issue_info.S_roll"
                     + "                            join book"
                     + "                            on book.reg_no = issue_info.reg_no"
                     + "                            where s_year = '1st'");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_borrower_1stActionPerformed

    private void borrower_2ndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrower_2ndActionPerformed
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("select issue_info.S_roll as Student_roll, S_name as Student_name,S_year as Student_year,S_group as Student_group, book.B_name as Book_Borrowed from student"
                     + "                            join issue_info"
                     + "                            on student.S_roll = issue_info.S_roll"
                     + "                            join book"
                     + "                            on book.reg_no = issue_info.reg_no"
                     + "                            where s_year = '2nd'");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_borrower_2ndActionPerformed

    private void borrowed_catagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowed_catagoryActionPerformed
         try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("select B_name as Borrowed_book, Catagory from book"
                     + "                            join issue_info"
                     + "                            on book.reg_no = issue_info.reg_no"
                     + "                            group by B_name,catagory");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_borrowed_catagoryActionPerformed

    private void total_1stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_1stActionPerformed
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("select count(s_year) as Total_First_Year_Borrowers from student"
                     + "                            join issue_info"
                     + "                            on student.s_roll = issue_info.s_roll"
                     + "                            where s_year = '1st'");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_total_1stActionPerformed

    private void total_2ndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_2ndActionPerformed
       try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("select count(s_year) as Total_Secondt_Year_Borrowers from student"
                     + "                            join issue_info"
                     + "                            on student.s_roll = issue_info.s_roll"
                     + "                            where s_year = '2nd'");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          query_table.setModel(dtm); 
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_total_2ndActionPerformed

    private void btn_search_bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_bookActionPerformed
       String book_search = search_book.getText().trim();
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true"); 
            
            
            if ( !book_search.isEmpty()){
                Statement statement = connection.createStatement(); 
           ResultSet rs = statement.executeQuery("select * from book where b_name  like '%"+book_search+"%'  ");
           
              
           ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          search_table.setModel(dtm);
           
           // search_book.setText("");
         //   search_student.setText("");
            }
            else{
                JOptionPane.showMessageDialog(librarian_page.this, "Please Enter Book Name!" , "Error" , JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(librarian_page.this, "No Data Found!" , "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_search_bookActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
         lib_show_panel.removeAll();
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
        
        lib_show_panel.add(Search_panel);
        lib_show_panel.repaint();
        lib_show_panel.revalidate();
    }//GEN-LAST:event_search_btnActionPerformed

    private void btn_search_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_studentActionPerformed
        String student_search = search_student.getText().trim();
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lib_project;integratedSecurity=true"); 
            
            
            if ( !student_search.isEmpty()){
                Statement statement = connection.createStatement();       
           ResultSet rs = statement.executeQuery("select * from student where s_name  like '%"+student_search+"%'  ");
           ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          search_table.setModel(dtm);
           
           // search_book.setText("");
         //   search_student.setText("");
         
            }
            else{
                JOptionPane.showMessageDialog(librarian_page.this, "Please Enter Student Name!" , "Error" , JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(librarian_page.this, "Error!" , "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_search_studentActionPerformed

    private void search_bookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_bookMouseClicked
        search_student.setText("");
    }//GEN-LAST:event_search_bookMouseClicked

    private void search_studentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_studentMouseClicked
        search_book.setText("");
    }//GEN-LAST:event_search_studentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(librarian_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(librarian_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(librarian_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(librarian_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new librarian_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Librarian;
    private javax.swing.JPanel Search_panel;
    private javax.swing.JPanel add_book_panel;
    private javax.swing.JTextField book_auth;
    private javax.swing.JButton book_borrower;
    private javax.swing.JComboBox<String> book_cat;
    private com.toedter.calendar.JDateChooser book_date;
    private javax.swing.JTextField book_name;
    private javax.swing.JTextField book_pub;
    private javax.swing.JTextField book_quan;
    private javax.swing.JTextField book_reg;
    private javax.swing.JTable books_table;
    private javax.swing.JButton borrow_amount_btn;
    private javax.swing.JButton borrow_author_btn;
    private javax.swing.JButton borrowed_catagory;
    private javax.swing.JButton borrower_1st;
    private javax.swing.JButton borrower_2nd;
    private javax.swing.JButton btn_add_books;
    private javax.swing.JButton btn_book_added;
    private javax.swing.JButton btn_book_issued;
    private javax.swing.JButton btn_book_returned;
    private javax.swing.JButton btn_issue_books;
    private javax.swing.JButton btn_logout_librarian;
    private javax.swing.JButton btn_other_quries;
    private javax.swing.JButton btn_return_books;
    private javax.swing.JButton btn_search_book;
    private javax.swing.JButton btn_search_student;
    private javax.swing.JButton btn_student_reg;
    private javax.swing.JButton btn_view_books;
    private javax.swing.JButton btn_view_student;
    private javax.swing.JLabel contact;
    private javax.swing.JRadioButton female;
    private javax.swing.JLabel grp;
    private javax.swing.JComboBox<String> grp_CB;
    private javax.swing.JButton issue_amount_btn;
    private com.toedter.calendar.JDateChooser issue_book_date;
    private javax.swing.JTextField issue_book_reg;
    private javax.swing.JPanel issue_books_panel;
    private javax.swing.JTextField issue_student_roll;
    private javax.swing.JTable issue_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel lib_show_panel;
    private javax.swing.JPanel librarian_nav_panel;
    private javax.swing.JRadioButton male;
    private javax.swing.JLabel name;
    private javax.swing.JPanel other_queries_panel;
    private javax.swing.JTable query_table;
    private javax.swing.JPanel query_table_subPanel;
    private javax.swing.JButton remaining_amnt_btn;
    private javax.swing.JPanel return_book_panel;
    private javax.swing.JTextField return_book_reg;
    private javax.swing.JTextField return_student_roll;
    private javax.swing.JLabel roll;
    private javax.swing.JButton save_student_btn;
    private javax.swing.JTextField search_book;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField search_student;
    private javax.swing.JTable search_table;
    private javax.swing.JPanel search_table_subPanel;
    private javax.swing.JLabel sex;
    private javax.swing.JTextField student_con_field;
    private javax.swing.JTextField student_name_field;
    private javax.swing.JPanel student_reg_panel;
    private javax.swing.JTextField student_roll_field;
    private javax.swing.JTable student_table;
    private javax.swing.JButton total_1st;
    private javax.swing.JButton total_2nd;
    private javax.swing.JPanel view_books_panel;
    private javax.swing.JButton view_issue_books_btn;
    private javax.swing.JPanel view_issue_books_panel;
    private javax.swing.JPanel view_student_panel;
    private javax.swing.JPanel welcome_panel;
    private javax.swing.JLabel year;
    private javax.swing.JRadioButton yr1;
    private javax.swing.JRadioButton yr2;
    // End of variables declaration//GEN-END:variables
     String gander;
     String stu_year;
     String group;
     String catagory;
}
